imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
   #- { resource: @BashNodesBundle/Resources/config/admin.yml }

genemu_form:
    tinymce:
        script_url: '/tinymce/tiny_mce.js'
        enabled: true
        theme:   advanced


sonata_block:
    default_contexts: [cms]
    blocks:
        # Enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts:   [admin]
        # Your other blocks


sonata_admin:
    security:
        handler: sonata.admin.security.handler.role
        acl_user_manager: fos_user.user_manager # Name of the user manager service used to retrieve ACL users

    options:
        html5_validate: false # does not use html5 validation
        confirm_exit:   false # disable confirmation when quitting with unsaved changes
        use_select2:    false # disable select2
        pager_links:    5     # pager max links to display

    # set to true to persist filter settings per admin module in the user's session
    persist_filters: false





framework:
    #esi:             ~
    #translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true
    translator: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: "%kernel.root_dir%/data/data.db3"
        # path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }


genemu_form:
    image: ~
    tinymce: ~

sonata_media:
    db_driver: doctrine_orm
    class:
        media:              Application\Sonata\MediaBundle\Entity\Media
        gallery:            Application\Sonata\MediaBundle\Entity\Gallery
        gallery_has_media:  Application\Sonata\MediaBundle\Entity\GalleryHasMedia

    default_context: default
    contexts:
        default:  # the default context is mandatory
            download:
                strategy: sonata.media.security.superadmin_strategy
                mode: http
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}

        tv:
            download:
                strategy: sonata.media.security.superadmin_strategy
                mode: http
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube


            formats:
                cinema:     { width: 1850 , quality: 768}
                grandmatv:  { width: 640 , quality: 480}

        news:
            download:
                strategy: sonata.media.security.superadmin_strategy
                mode: http
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                small: { width: 150 , quality: 95}
                big:   { width: 500 , quality: 90}

    cdn:
        server:
            path:      /uploads/media # http://media.sonata-project.org

        panther:
            path:       http://domain.pantherportal.com/uploads/media
            site_id:
            password:
            username:

        fallback:
            master:     sonata.media.cdn.panther
            fallback:   sonata.media.cdn.server

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     false

        ftp:
            directory:
            host:
            username:
            password:
            port:     21
            passive:  false
            create:   false
            mode:     2 # this is the FTP_BINARY constant. see: http://php.net/manual/en/ftp.constants.php

        s3:
            bucket:
            accessKey:
            secretKey:
            create:         false
            region:         s3.amazonaws.com # change if not using US Standard region
            storage:        standard # can be one of: standard or reduced
            acl:            public # can be one of: public, private, open, auth_read, owner_read, owner_full_control
            encryption:     aes256 # can be aes256 or not set
            cache_control:  max-age=86400 # or any other
            meta:
                key1:       value1 #any amount of metas(sent as x-amz-meta-key1 = value1)

        mogilefs:
            hosts:      []
            domain:

        replicate:
            master: sonata.media.adapter.filesystem.s3
            slave: sonata.media.adapter.filesystem.local

        rackspace:
           url:
           secret:
             username:
             apiKey:
           region:
           containerName: media
           create_container: false

        openstack:
           url:
           secret:
             username:
             password:
           region:
           containerName: media
           create_container: false

    providers:
        file:
            service:    sonata.media.provider.file
            resizer:    false
            filesystem: sonata.media.filesystem.local
            cdn:        sonata.media.cdn.server
            generator:  sonata.media.generator.default
            thumbnail:  sonata.media.thumbnail.format
            allowed_extensions: ['pdf', 'txt', 'rtf', 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pttx', 'odt', 'odg', 'odp', 'ods', 'odc', 'odf', 'odb', 'csv', 'xml']
            allowed_mime_types: ['application/pdf', 'application/x-pdf', 'application/rtf', 'text/html', 'text/rtf', 'text/plain']

        image:
            service:    sonata.media.provider.image
            resizer:    sonata.media.resizer.simple # sonata.media.resizer.square
            filesystem: sonata.media.filesystem.local
            cdn:        sonata.media.cdn.server
            generator:  sonata.media.generator.default
            thumbnail:  sonata.media.thumbnail.format
            allowed_extensions: ['jpg', 'png', 'jpeg']
            allowed_mime_types: ['image/pjpeg', 'image/jpeg', 'image/png', 'image/x-png']

        youtube:
            service:    sonata.media.provider.youtube
            resizer:    sonata.media.resizer.simple
            filesystem: sonata.media.filesystem.local
            cdn:        sonata.media.cdn.server
            generator:  sonata.media.generator.default
            thumbnail:  sonata.media.thumbnail.format
            html5: false

        dailymotion:
            service:    sonata.media.provider.dailymotion
            resizer:    sonata.media.resizer.simple
            filesystem: sonata.media.filesystem.local
            cdn:        sonata.media.cdn.server
            generator:  sonata.media.generator.default
            thumbnail:  sonata.media.thumbnail.format

    buzz:
        connector:  sonata.media.buzz.connector.file_get_contents # sonata.media.buzz.connector.curl

services:
    foo.twig.extension:
        class: Bash\BashBundle\Extension\MyTwigExtension
        tags:
            -  { name: twig.extension }


stfalcon_tinymce:
        include_jquery: true
        tinymce_jquery: true
        selector: ".tinymce"
        base_url: "http://localhost/task/web/app_dev.php/" # this parameter may be included if you need to override the assets_base_urls for your template engine (to override a CDN base url)
        # Get current language from the parameters.ini
        language: %locale%
        # Custom buttons
        tinymce_buttons:
            stfalcon: # Id of the first button
                title: "Stfalcon"
                image: "http://stfalcon.com/favicon.ico"
        theme:
            # Simple theme: same as default theme
            simple: ~
            # Advanced theme with almost all enabled plugins
            advanced:
                 plugins:
                     - "advlist autolink lists link image charmap print preview hr anchor pagebreak"
                     - "searchreplace wordcount visualblocks visualchars code fullscreen"
                     - "insertdatetime media nonbreaking save table contextmenu directionality"
                     - "emoticons template paste textcolor"
                 toolbar1: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image"
                 toolbar2: "print preview media | forecolor backcolor emoticons | stfalcon | example"
                 image_advtab: true
                 templates:
                     - {title: 'Test template 1', content: 'Test 1'}
                     - {title: 'Test template 2', content: 'Test 2'}
            # BBCode tag compatible theme (see http://www.bbcode.org/reference.php)
            bbcode:
                 plugins: ["bbcode, code, link, preview"]
                 menubar: false
                 toolbar1: "bold,italic,underline,undo,redo,link,unlink,removeformat,cleanup,code,preview"

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: Bash\UserBundle\Entity\User